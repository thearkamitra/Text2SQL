[
  {
    "question": "Find the total cost of the project Theseus",
    "sql": "SELECT total_cost FROM projects WHERE title = 'Theseus';"
  },
  {
    "question": "Show total cost of project with title Theseus",
    "sql": "SELECT title, total_cost FROM projects WHERE title = 'Theseus';"
  },
  {
    "question": "Show me the acronyms of projects that started in 2018",
    "sql": "SELECT DISTINCT acronym FROM projects WHERE start_year = 2018;"
  },
  {
    "question": "Get acronyms of projects beginning in 2018",
    "sql": "SELECT DISTINCT acronym FROM projects WHERE start_year = 2018;"
  },
  {
    "question": "Show me the titles of projects that started before 2016",
    "sql": "SELECT DISTINCT title FROM projects WHERE start_year < 2016;"
  },
  {
    "question": "Find titles of projects which started earlier than 2016",
    "sql": "SELECT DISTINCT title FROM projects WHERE start_year < 2016;"
  },
  {
    "question": "Find institutions from the region of Nordjylland",
    "sql": "SELECT DISTINCT institutions_name FROM institutions WHERE geocode_regions_3 = 'Nordjylland';"
  },
  {
    "question": "Show the name of institutions based in Nordjylland",
    "sql": "SELECT DISTINCT institutions_name FROM institutions WHERE geocode_regions_3 = 'Nordjylland';"
  },
  {
    "question": "Find the name of principal investigators in projects that started in 2014",
    "sql": "SELECT DISTINCT principal_investigator FROM projects WHERE start_year = 2014;"
  },
  {
    "question": "Show the full name of people being investigators in projects that began in 2014",
    "sql": "SELECT DISTINCT p.full_name FROM people p JOIN projects pr ON p.unics_id = pr.principal_investigator WHERE pr.start_year = 2014;"
  },
  {
    "question": "Find projects whose subject area is \u201cMathematics and Statistics\u201d",
    "sql": "SELECT DISTINCT pr.acronym, sa.title AS subject_area FROM projects pr JOIN project_subject_areas psa ON pr.unics_id = psa.project JOIN subject_areas sa ON psa.subject_area = sa.code WHERE sa.title = 'Mathematics and Statistics';"
  },
  {
    "question": "Show the acronym and subject area description of projects with subject area \u201cMathematics and Statistics\u201d",
    "sql": "SELECT DISTINCT pr.acronym, sa.description FROM projects pr JOIN project_subject_areas psa ON pr.unics_id = psa.project JOIN subject_areas sa ON psa.subject_area = sa.code WHERE sa.title = 'Mathematics and Statistics';"
  },
  {
    "question": "Find all different topics of projects that ended in 2014",
    "sql": "SELECT DISTINCT t.title FROM topics t JOIN project_topics pt ON t.code = pt.topic JOIN projects pr ON pt.project = pr.unics_id WHERE pr.end_year = 2014;"
  },
  {
    "question": "Find distinct titles of topics of projects that with end year 2014",
    "sql": "SELECT DISTINCT t.title FROM topics t JOIN project_topics pt ON t.code = pt.topic JOIN projects pr ON pt.project = pr.unics_id WHERE pr.end_year = 2014;"
  },
  {
    "question": "Show the acronym of projects with a member from Greece",
    "sql": "SELECT DISTINCT pr.acronym FROM projects pr JOIN project_members pm ON pr.unics_id = pm.project WHERE pm.country = 'Greece';"
  },
  {
    "question": "Show names of institutions from France or Germany",
    "sql": "SELECT DISTINCT institutions_name FROM institutions WHERE country_id IN (SELECT unics_id FROM countries WHERE country_name IN ('France', 'Germany'));"
  },
  {
    "question": "Show names of institutions which are not from France",
    "sql": "SELECT DISTINCT institutions_name FROM institutions WHERE country_id NOT IN (SELECT unics_id FROM countries WHERE country_name = 'France');"
  },
  {
    "question": "Count the projects that started in 2016",
    "sql": "SELECT COUNT(*) AS project_count FROM projects WHERE start_year = 2016;"
  },
  {
    "question": "Show the title of the project with the highest total cost",
    "sql": "SELECT title FROM projects ORDER BY total_cost DESC LIMIT 1;"
  },
  {
    "question": "Show the name of members in projects costing less than the average project cost.",
    "sql": "SELECT DISTINCT pm.member_name FROM project_members pm JOIN projects pr ON pm.project = pr.unics_id WHERE pr.total_cost < (SELECT AVG(total_cost) FROM projects);"
  },
  {
    "question": "Find the id of projects with at least 100 members",
    "sql": "SELECT pr.unics_id FROM projects pr JOIN project_members pm ON pr.unics_id = pm.project GROUP BY pr.unics_id HAVING COUNT(pm.member_name) >= 100;"
  },
  {
    "question": "Find the code and title of the funding scheme which funded the highest number of projects.",
    "sql": "SELECT fs.code, fs.title FROM funding_schemes fs JOIN projects pr ON fs.code = pr.ec_fund_scheme GROUP BY fs.code, fs.title ORDER BY COUNT(pr.unics_id) DESC LIMIT 1;"
  },
  {
    "question": "Show the total costs of all projects",
    "sql": "SELECT SUM(total_cost) AS total_cost_sum FROM projects;"
  },
  {
    "question": "Show me the title of projects which have an end year and a start year after 2006",
    "sql": "SELECT DISTINCT title FROM projects WHERE start_year > 2006 AND end_year IS NOT NULL;"
  },
  {
    "question": "Find the projects which lasted the longest and have an end year and a start year",
    "sql": "SELECT title FROM projects WHERE start_year IS NOT NULL AND end_year IS NOT NULL ORDER BY (end_year - start_year) DESC LIMIT 1;"
  },
  {
    "question": "Show me topic titles which starts with 'Raw materials'",
    "sql": "SELECT DISTINCT title FROM topics WHERE title ILIKE 'Raw materials%';"
  },
  {
    "question": "Show me topic titles which contain the word 'climate'",
    "sql": "SELECT DISTINCT title FROM topics WHERE title ILIKE '%climate%';"
  },
  {
    "question": "Show me the number of projects where Thomas Bell was principal investigator",
    "sql": "SELECT COUNT(*) AS project_count FROM projects WHERE principal_investigator = (SELECT unics_id FROM people WHERE full_name = 'Thomas Bell');"
  },
  {
    "question": "Show me the all different names of people",
    "sql": "SELECT DISTINCT full_name FROM people;"
  },
  {
    "question": "Find the acronym of projects which have total costs between 100000 and 200000",
    "sql": "SELECT DISTINCT acronym FROM projects WHERE total_cost BETWEEN 100000 AND 200000;"
  },
  {
    "question": "Show the title of projects with costs higher than 1000000",
    "sql": "SELECT DISTINCT title FROM projects WHERE total_cost > 1000000;"
  },
  {
    "question": "Show the title of projects with costs higher than a million",
    "sql": "SELECT DISTINCT title FROM projects WHERE total_cost > 1000000;"
  },
  {
    "question": "Show the project title and member name where the member has a partner role",
    "sql": "SELECT DISTINCT pr.title, pm.member_name FROM projects pr JOIN project_members pm ON pr.unics_id = pm.project WHERE pm.member_role = 'partner';"
  },
  {
    "question": "What different research domains do exist?",
    "sql": "SELECT DISTINCT description FROM erc_research_domains;"
  },
  {
    "question": "Show me the country name of all institutes.",
    "sql": "SELECT DISTINCT c.country_name FROM institutions i JOIN countries c ON i.country_id = c.unics_id;"
  },
  {
    "question": "Show me the country of all institutes.",
    "sql": "SELECT DISTINCT c.country_name FROM institutions i JOIN countries c ON i.country_id = c.unics_id;"
  },
  {
    "question": "What is the country code 2 and country code 3 for Andorra?",
    "sql": "SELECT country_code2, country_code3 FROM countries WHERE country_name = 'Andorra';"
  },
  {
    "question": "Find the code of the funding scheme for Framework Partnership Agreement",
    "sql": "SELECT code FROM funding_schemes WHERE title = 'Framework Partnership Agreement';"
  },
  {
    "question": "Show me the full title of the program which is called 'Transport' in short.",
    "sql": "SELECT title FROM programmes WHERE short_name = 'Transport';"
  },
  {
    "question": "Find member name and role code of project members in project with acronym GTBB",
    "sql": "SELECT pm.member_name, pm.member_role FROM project_members pm JOIN projects pr ON pm.project = pr.unics_id WHERE pr.acronym = 'GTBB';"
  },
  {
    "question": "Find member name and role code of project members in project GTBB",
    "sql": "SELECT pm.member_name, pm.member_role FROM project_members pm JOIN projects pr ON pm.project = pr.unics_id WHERE pr.acronym = 'GTBB';"
  },
  {
    "question": "Show titles of programmes which have FP7 as parent program",
    "sql": "SELECT title FROM programmes WHERE parent = 'FP7';"
  },
  {
    "question": "Show titles of programmes which have program with code FP7 as parent program",
    "sql": "SELECT title FROM programmes WHERE parent = 'FP7';"
  },
  {
    "question": "Get panel descriptions from research domain Life Sciences",
    "sql": "SELECT ep.description FROM erc_panels ep JOIN erc_research_domains erd ON ep.part_of = erd.code WHERE erd.description ILIKE 'Life Sciences';"
  },
  {
    "question": "Get panel descriptions from research domain life sciences",
    "sql": "SELECT ep.description FROM erc_panels ep JOIN erc_research_domains erd ON ep.part_of = erd.code WHERE erd.description ILIKE 'Life Sciences';"
  },
  {
    "question": "Find project members of type Research Organisations",
    "sql": "SELECT DISTINCT pm.member_name FROM project_members pm JOIN activity_types at ON pm.activity_type = at.code WHERE at.description = 'Research Organisations';"
  },
  {
    "question": "Get names of project members who's activity type description is Research Organisations",
    "sql": "SELECT DISTINCT pm.member_name FROM project_members pm JOIN activity_types at ON pm.activity_type = at.code WHERE at.description = 'Research Organisations';"
  },
  {
    "question": "What is the objective of DEEPCARBON?",
    "sql": "SELECT objective FROM projects WHERE acronym = 'DEEPCARBON';"
  },
  {
    "question": "What is the objective of the project with acronym DEEPCARBON?",
    "sql": "SELECT objective FROM projects WHERE acronym = 'DEEPCARBON';"
  },
  {
    "question": "Get the title of projects having the term 'carbon capturing' in it's objective.",
    "sql": "SELECT DISTINCT title FROM projects WHERE objective ILIKE '%carbon capturing%';"
  },
  {
    "question": "How many projects have an objective which contains 'carbon capturing'?",
    "sql": "SELECT COUNT(*) FROM projects WHERE objective ILIKE '%carbon capturing%';"
  },
  {
    "question": "Show all names of institutions from France except institutions from the territorial region of Paris",
    "sql": "SELECT DISTINCT institutions_name FROM institutions WHERE country_id = (SELECT unics_id FROM countries WHERE country_name = 'France') AND geocode_regions_3 != 'Paris';"
  },
  {
    "question": "Show institutions from France except the ones from Paris",
    "sql": "SELECT DISTINCT institutions_name FROM institutions WHERE country_id = (SELECT unics_id FROM countries WHERE country_name = 'France') AND geocode_regions_3 != 'Paris';"
  },
  {
    "question": "Which institutions have never been project coordinators",
    "sql": "SELECT DISTINCT i.institutions_name FROM institutions i WHERE i.unics_id NOT IN (SELECT pm.institution_id FROM project_members pm WHERE pm.member_role = 'coordinator');"
  },
  {
    "question": "Show all of the instituions that have never coordinated a project",
    "sql": "SELECT DISTINCT i.institutions_name FROM institutions i WHERE i.unics_id NOT IN (SELECT pm.institution_id FROM project_members pm WHERE pm.member_role = 'coordinator');"
  },
  {
    "question": "Show all of the names of people who have worked on multiple projects",
    "sql": "SELECT DISTINCT p.full_name FROM people p JOIN project_members pm ON p.unics_id = pm.unics_id GROUP BY p.full_name HAVING COUNT(DISTINCT pm.project) > 1;"
  },
  {
    "question": "Which people have worked on more than one project",
    "sql": "SELECT DISTINCT p.full_name FROM people p JOIN project_members pm ON p.unics_id = pm.unics_id GROUP BY p.full_name HAVING COUNT(DISTINCT pm.project) > 1;"
  },
  {
    "question": "What is the title of the subject area that has been granted the most funding",
    "sql": "SELECT sa.title FROM subject_areas sa JOIN project_subject_areas psa ON sa.code = psa.subject_area JOIN projects pr ON psa.project = pr.unics_id GROUP BY sa.title ORDER BY SUM(pr.ec_max_contribution) DESC LIMIT 1;"
  },
  {
    "question": "Which subject area has recieved the highest funding contribution?",
    "sql": "SELECT sa.title FROM subject_areas sa JOIN project_subject_areas psa ON sa.code = psa.subject_area JOIN projects pr ON psa.project = pr.unics_id GROUP BY sa.title ORDER BY SUM(pr.ec_max_contribution) DESC LIMIT 1;"
  },
  {
    "question": "Which subject area has recieved the least funding contribution",
    "sql": "SELECT sa.title FROM subject_areas sa JOIN project_subject_areas psa ON sa.code = psa.subject_area JOIN projects pr ON psa.project = pr.unics_id GROUP BY sa.title ORDER BY SUM(pr.ec_max_contribution) ASC LIMIT 1;"
  },
  {
    "question": "What is the title of the subject area that has been granted the least amount of funding",
    "sql": "SELECT sa.title FROM subject_areas sa JOIN project_subject_areas psa ON sa.code = psa.subject_area JOIN projects pr ON psa.project = pr.unics_id GROUP BY sa.title ORDER BY SUM(pr.ec_max_contribution) ASC LIMIT 1;"
  },
  {
    "question": "Which institution has participated in the most projects",
    "sql": "SELECT i.institutions_name FROM institutions i JOIN project_members pm ON i.unics_id = pm.institution_id GROUP BY i.institutions_name ORDER BY COUNT(DISTINCT pm.project) DESC LIMIT 1;"
  },
  {
    "question": "Show the institution that has been involved in the highest number of projects",
    "sql": "SELECT i.institutions_name FROM institutions i JOIN project_members pm ON i.unics_id = pm.institution_id GROUP BY i.institutions_name ORDER BY COUNT(DISTINCT pm.project) DESC LIMIT 1;"
  },
  {
    "question": "Which institution has participated in the fewest projects",
    "sql": "SELECT i.institutions_name FROM institutions i JOIN project_members pm ON i.unics_id = pm.institution_id GROUP BY i.institutions_name ORDER BY COUNT(DISTINCT pm.project) ASC LIMIT 1;"
  },
  {
    "question": "Show the institution that has been involved in the least amount of projects",
    "sql": "SELECT i.institutions_name FROM institutions i JOIN project_members pm ON i.unics_id = pm.institution_id GROUP BY i.institutions_name ORDER BY COUNT(DISTINCT pm.project) ASC LIMIT 1;"
  },
  {
    "question": "Which funding scheme provided the most funding",
    "sql": "SELECT fs.title FROM funding_schemes fs JOIN projects pr ON fs.code = pr.ec_fund_scheme GROUP BY fs.title ORDER BY SUM(pr.ec_max_contribution) DESC LIMIT 1;"
  },
  {
    "question": "Which funding scheme provided the least funding",
    "sql": "SELECT fs.title FROM funding_schemes fs JOIN projects pr ON fs.code = pr.ec_fund_scheme GROUP BY fs.title ORDER BY SUM(pr.ec_max_contribution) ASC LIMIT 1;"
  },
  {
    "question": "Show the industrial partners that have worked on projects and the amount of funding they have recieved in order from most to least",
    "sql": "SELECT pm.member_name, SUM(pr.ec_max_contribution) AS total_funding FROM project_members pm JOIN projects pr ON pm.project = pr.unics_id JOIN activity_types at ON pm.activity_type = at.code WHERE at.description ILIKE '%Industrial%' GROUP BY pm.member_name ORDER BY total_funding DESC;"
  },
  {
    "question": "Show the amount of funding and corresponding list of industrial partners that have worked on projects in order from the most funding to the least funding",
    "sql": "SELECT pm.member_name, SUM(pr.ec_max_contribution) AS total_funding FROM project_members pm JOIN projects pr ON pm.project = pr.unics_id JOIN activity_types at ON pm.activity_type = at.code WHERE at.description ILIKE '%Industrial%' GROUP BY pm.member_name ORDER BY total_funding DESC;"
  },
  {
    "question": "Show the title and the start year of the most recent projects",
    "sql": "SELECT title, start_year FROM projects ORDER BY start_year DESC LIMIT 5;"
  },
  {
    "question": "Which projects have started most recently?",
    "sql": "SELECT title FROM projects ORDER BY start_year DESC LIMIT 5;"
  },
  {
    "question": "Show title and the starting year of the least recent projects",
    "sql": "SELECT title, start_year FROM projects ORDER BY start_year ASC LIMIT 5;"
  },
  {
    "question": "Which projects have started the least recently?",
    "sql": "SELECT title FROM projects ORDER BY start_year ASC LIMIT 5;"
  },
  {
    "question": "What is the starting date of the first recorded project",
    "sql": "SELECT start_date FROM projects ORDER BY start_date ASC LIMIT 1;"
  },
  {
    "question": "On which date did the first project start?",
    "sql": "SELECT start_date FROM projects ORDER BY start_date ASC LIMIT 1;"
  },
  {
    "question": "Show the titles of all of the projects in the subject area of Climate change and Carbon cycle research",
    "sql": "SELECT DISTINCT pr.title FROM projects pr JOIN project_subject_areas psa ON pr.unics_id = psa.project JOIN subject_areas sa ON psa.subject_area = sa.code WHERE sa.title = 'Climate change and Carbon cycle research';"
  },
  {
    "question": "Show the titles of all of the projects that share the subject area code 'CCC",
    "sql": "SELECT DISTINCT pr.title FROM projects pr JOIN project_subject_areas psa ON pr.unics_id = psa.project JOIN subject_areas sa ON psa.subject_area = sa.code WHERE sa.code = 'CCC';"
  },
  {
    "question": "List all of the possible roles that project members can have in projects",
    "sql": "SELECT DISTINCT description FROM project_member_roles;"
  },
  {
    "question": "What are all of the ways that projects members can participate in projects?",
    "sql": "SELECT DISTINCT description FROM project_member_roles;"
  },
  {
    "question": "How many erc panels are dedicated to Life Sciences",
    "sql": "SELECT COUNT(*) FROM erc_panels ep JOIN erc_research_domains erd ON ep.part_of = erd.code WHERE erd.description ILIKE 'Life Sciences';"
  },
  {
    "question": "Count the number of erc panels that are part of Life Sciences",
    "sql": "SELECT COUNT(*) FROM erc_panels ep JOIN erc_research_domains erd ON ep.part_of = erd.code WHERE erd.description ILIKE 'Life Sciences';"
  },
  {
    "question": "List all of the european research council panels related to social sciences and humanities",
    "sql": "SELECT DISTINCT ep.description FROM erc_panels ep JOIN erc_research_domains erd ON ep.part_of = erd.code WHERE erd.description ILIKE 'Social Sciences and Humanities';"
  },
  {
    "question": "How many european research council panels are related to social sciences and humanities",
    "sql": "SELECT COUNT(*) FROM erc_panels ep JOIN erc_research_domains erd ON ep.part_of = erd.code WHERE erd.description ILIKE 'Social Sciences and Humanities';"
  },
  {
    "question": "Show all of the project members that are private for profit entities",
    "sql": "SELECT DISTINCT pm.member_name FROM project_members pm JOIN activity_types at ON pm.activity_type = at.code WHERE at.description ILIKE '%Private for Profit%';"
  },
  {
    "question": "Which project members are businesses?",
    "sql": "SELECT DISTINCT pm.member_name FROM project_members pm JOIN activity_types at ON pm.activity_type = at.code WHERE at.description ILIKE '%Private for Profit%';"
  },
  {
    "question": "How many project members are businesses?",
    "sql": "SELECT COUNT(*) FROM project_members pm JOIN activity_types at ON pm.activity_type = at.code WHERE at.description ILIKE '%Private for Profit%';"
  },
  {
    "question": "How many project members are Higher or Secondary Education Establishments?",
    "sql": "SELECT COUNT(*) FROM project_members pm JOIN activity_types at ON pm.activity_type = at.code WHERE at.description ILIKE '%Education Establishments%';"
  },
  {
    "question": "Count the number of project members that are Educational Establishments",
    "sql": "SELECT COUNT(*) FROM project_members pm JOIN activity_types at ON pm.activity_type = at.code WHERE at.description ILIKE '%Education Establishments%';"
  },
  {
    "question": "How many projects have been related to Robotics?",
    "sql": "SELECT COUNT(DISTINCT pr.unics_id) FROM projects pr JOIN project_subject_areas psa ON pr.unics_id = psa.project JOIN subject_areas sa ON psa.subject_area = sa.code WHERE sa.title ILIKE '%Robotics%';"
  },
  {
    "question": "What is the number of projects that have been carried out in the subject area of Robotics?",
    "sql": "SELECT COUNT(DISTINCT pr.unics_id) FROM projects pr JOIN project_subject_areas psa ON pr.unics_id = psa.project JOIN subject_areas sa ON psa.subject_area = sa.code WHERE sa.title ILIKE '%Robotics%';"
  },
  {
    "question": "Which non-EU entity has recieved the most funding through a project?",
    "sql": "SELECT pm.member_name FROM project_members pm JOIN projects pr ON pm.project = pr.unics_id JOIN countries c ON pm.country = c.country_name WHERE c.geocode_country_code != 'EU' GROUP BY pm.member_name ORDER BY SUM(pr.ec_max_contribution) DESC LIMIT 1;"
  },
  {
    "question": "Which entity located outside of the EU has received the most funding?",
    "sql": "SELECT pm.member_name FROM project_members pm JOIN projects pr ON pm.project = pr.unics_id JOIN countries c ON pm.country = c.country_name WHERE c.geocode_country_code != 'EU' GROUP BY pm.member_name ORDER BY SUM(pr.ec_max_contribution) DESC LIMIT 1;"
  },
  {
    "question": "Which non-EU entity has recieved the least funding through a project?",
    "sql": "SELECT pm.member_name FROM project_members pm JOIN projects pr ON pm.project = pr.unics_id JOIN countries c ON pm.country = c.country_name WHERE c.geocode_country_code != 'EU' GROUP BY pm.member_name ORDER BY SUM(pr.ec_max_contribution) ASC LIMIT 1;"
  },
  {
    "question": "Which entity located outside of the EU has received the least funding?",
    "sql": "SELECT pm.member_name FROM project_members pm JOIN projects pr ON pm.project = pr.unics_id JOIN countries c ON pm.country = c.country_name WHERE c.geocode_country_code != 'EU' GROUP BY pm.member_name ORDER BY SUM(pr.ec_max_contribution) ASC LIMIT 1;"
  },
  {
    "question": "How many non-EU entities have participated in projects?",
    "sql": "SELECT COUNT(DISTINCT pm.member_name) FROM project_members pm JOIN countries c ON pm.country = c.country_name WHERE c.geocode_country_code != 'EU';"
  },
  {
    "question": "Which entities that are located outside of the European Union have participated in projects?",
    "sql": "SELECT DISTINCT pm.member_name FROM project_members pm JOIN countries c ON pm.country = c.country_name WHERE c.geocode_country_code != 'EU';"
  },
  {
    "question": "Show all of the programmes with titles that are related to climate",
    "sql": "SELECT DISTINCT title FROM programmes WHERE title ILIKE '%climate%';"
  },
  {
    "question": "List the programms that have the term climate in the title",
    "sql": "SELECT DISTINCT title FROM programmes WHERE title ILIKE '%climate%';"
  },
  {
    "question": "Show the title and amount of funds that have been allocated per programme",
    "sql": "SELECT prg.title, SUM(pr.ec_max_contribution) AS total_funds FROM programmes prg JOIN project_programmes pp ON prg.code = pp.programme JOIN projects pr ON pp.project = pr.unics_id GROUP BY prg.title;"
  },
  {
    "question": "List all of the titles and the amount of funding that has been dispersed per programme",
    "sql": "SELECT prg.title, SUM(pr.ec_max_contribution) AS total_funds FROM programmes prg JOIN project_programmes pp ON prg.code = pp.programme JOIN projects pr ON pp.project = pr.unics_id GROUP BY prg.title;"
  }
]